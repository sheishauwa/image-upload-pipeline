name: Full Deploy - S3 Bucket + Lambda + CloudFormation

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-north-1
      ARTIFACT_BUCKET: image-upload-artifacts-hauwa

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Pillow and zip Lambda
      run: |
        pip install pillow -t lambda/
        cd lambda
        zip -r ../resize.zip .
      shell: bash

    - name: Create Artifact Bucket if not exists
      run: |
        aws s3api head-bucket --bucket $ARTIFACT_BUCKET 2>/dev/null || \
        aws s3 mb s3://$ARTIFACT_BUCKET --region $AWS_REGION
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Upload Lambda ZIP to S3
      run: |
        aws s3 cp resize.zip s3://$ARTIFACT_BUCKET/resize.zip --region $AWS_REGION
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Deploy CloudFormation stack
      run: |
        aws cloudformation deploy \
          --template-file templates/cloudformation.yaml \
          --stack-name ImageUploadStack \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides \
            UploadBucketName=image-upload-raw-hauwa \
            ProcessedBucketName=image-upload-processed-hauwa \
            ArtifactBucketName=$ARTIFACT_BUCKET \
            ArtifactKey=resize.zip \
          --region $AWS_REGION
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Debug CloudFormation stack
      if: failure()
      run: |
        echo "=== CloudFormation Error Logs ==="
        aws cloudformation describe-stack-events \
          --stack-name ImageUploadStack \
          --region $AWS_REGION \
          --max-items 10
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
